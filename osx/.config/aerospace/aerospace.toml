# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
  'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0'
]

# Start AeroSpace at login
start-at-login = false

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = false

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
    preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See:
#                 https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
    inner.horizontal = 10
    inner.vertical =   10
    outer.left =       10
    outer.bottom =     10
    outer.top =        10
    outer.right =      10

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]
    # All possible keys:
    # - Letters.        a, b, c, ..., z
    # - Numbers.        0, 1, 2, ..., 9
    # - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
    # - F-keys.         f1, f2, ..., f20
    # - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon,
    #                   backtick, leftSquareBracket, rightSquareBracket, space, enter, esc,
    #                   backspace, tab
    # - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
    #                   keypadMinus, keypadMultiply, keypadPlus
    # - Arrows.         left, down, up, right

    # All possible modifiers: cmd, alt, ctrl, shift

    # All possible commands: https://nikitabobko.github.io/AeroSpace/commands

    # Configuration
    alt-shift-ctrl-r = 'reload-config'

    # Layout
    alt-slash = 'layout tiles horizontal vertical'
    alt-shift-slash = 'layout accordion horizontal vertical'
 
    # Apps
    alt-b = 'exec-and-forget open -n "/Applications/Google Chrome.app"'
    alt-shift-b = 'exec-and-forget open -n "/Applications/Zen Browser.app"'
    alt-t = 'exec-and-forget open -n "/Applications/Ghostty.app"'

    # Windows
    alt-f = 'layout floating tiling'
    alt-h = 'focus left'
    alt-j = 'focus down'
    alt-k = 'focus up'
    alt-l = 'focus right'
    alt-x = 'close'
    alt-z = 'fullscreen'
    alt-shift-minus = 'resize smart -50'
    alt-shift-equal = 'resize smart +50'
    alt-shift-backspace = 'flatten-workspace-tree'
    alt-shift-h = 'move left'
    alt-shift-j = 'move down'
    alt-shift-k = 'move up'
    alt-shift-l = 'move right'
    alt-shift-ctrl-h = 'join-with left'
    alt-shift-ctrl-j = 'join-with down'
    alt-shift-ctrl-k = 'join-with up'
    alt-shift-ctrl-l = 'join-with right'
    alt-shift-ctrl-o = 'close-all-windows-but-current'

    # Workspaces
    alt-tab = 'workspace-back-and-forth'
    alt-c = 'workspace C' # Communication
    alt-d = 'workspace D' # Dashboard
    alt-o = 'workspace O' # On-call
    alt-p = 'workspace P' # Playground
    alt-w = 'workspace W' # Work
    alt-shift-c = 'move-node-to-workspace C' # Communication
    alt-shift-d = 'move-node-to-workspace D' # Dashboard
    alt-shift-o = 'move-node-to-workspace O' # On-call
    alt-shift-p = 'move-node-to-workspace P' # Playground
    alt-shift-w = 'move-node-to-workspace W' # Work

    # Volume
    alt-m = 'volume set 0'
    alt-shift-m = 'volume set 100'
    alt-minus = 'volume up'
    alt-equal = 'volume down'

# Default floating windows
[[on-window-detected]]
    if.app-id = 'app.zen-browser.zen'
    if.window-title-regex-substring = 'Extension: \(LastPass\)'
    run = 'layout floating'
[[on-window-detected]]
    if.app-id = 'app.zen-browser.zen'
    if.window-title-regex-substring = 'Picture-in-Picture'
    run = 'layout floating'

# Workaround for ghostty tabs
# [[on-window-detected]]
#     if.app-id = "com.mitchellh.ghostty"
#     run = ['layout floating']
